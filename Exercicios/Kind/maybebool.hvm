True  = λtrue λfalse true
False = λtrue λfalse false 

(Show a) = (a "True" "False")

(Bool.eql a b) = (a b (b False True))

(BoolEql a b) = (a b (b False True))

None  =      λnone λsome none
Some  = λval λnone λsome (some val)

// Returns true if Maybe is none
(IsNone a) = (a True (λb False))

// Returns true if Maybe is some
(IsSome a) = (a False (λb True))

// Returns true if both inputs are identical
(IsEql a b) = (a (b True (λa False)) (b (λa False) (λb (BoolEql a b))))
//  IsEql a b = match a {
//    None => match b {
//            None   => true
//            Some b => false
//    }
//    Some a => match b {
//            None   => false
//            Some b => (BoolEql a b)
//    }
//  }


(Main) =
  // (Show False)
  // (Show (Bool.eql True True))
  // (Show (IsNone ((Some) (True))))
  // (Show (IsNone None))
  // (Show (IsSome None))
  // (Show (IsSome ((Some) (False))))
  (Show (IsEql ((Some) (True)) (((Some) (False) ))))
  
